{
  "name": "pcre-to-regexp",
  "version": "0.0.4",
  "description": "Converts PCRE regexp strings to JavaScript RegExp instances",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/pcre-to-regexp.git"
  },
  "keywords": [
    "pcre",
    "regexp",
    "convert",
    "js",
    "php",
    "preg",
    "preg_replace",
    "preg_match"
  ],
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/TooTallNate/pcre-to-regexp/issues"
  },
  "homepage": "https://github.com/TooTallNate/pcre-to-regexp",
  "devDependencies": {
    "mocha": "~1.20.1"
  },
  "readme": "pcre-to-regexp\n==============\n### Converts PCRE regexp strings to JavaScript RegExp instances\n[![Build Status](https://travis-ci.org/TooTallNate/pcre-to-regexp.svg?branch=master)](https://travis-ci.org/TooTallNate/pcre-to-regexp)\n\nCreates a JavaScript `RegExp` instance from a PCRE regexp string.\nNot currently feature-complete, but works enough for my needs. Send\npull requests for additional functionality!\n\nWorks with Node.js and in the browser via a CommonJS bundler like browserify.\n\n\nInstallation\n------------\n\n``` bash\n$ npm install pcre-to-regexp\n```\n\nExample\n-------\n\nA basic example of a Twitter URL parsing PCRE regexp:\n\n``` js\nvar url = \"%^https?:\\/\\/twitter\\\\.com(\\/\\\\#\\\\!)?\\/(?P<username>[a-zA-Z0-9_]{1,20})\\\\\\/status(es)?\\/(?P<id>\\\\d+)\\/?$%ig\";\n\n// parse the PCRE regexp into a JS RegExp\nvar keys = [];\nvar re = PCRE(url, keys);\n\nconsole.log(keys);\n// [ , 'username', , 'id' ]\n\nconsole.log(re);\n// /^https?://twitter\\.com(/\\#\\!)?/([a-zA-Z0-9_]{1,20})\\/status(es)?/(\\d+)/?$/gi\n\nvar match = re.exec('https://twitter.com/tootallnate/status/481604870626349056');\nconsole.log(match);\n// [ 'https://twitter.com/tootallnate/status/481604870626349056',\n//   undefined,\n//   'tootallnate',\n//   undefined,\n//   '481604870626349056',\n//   index: 0,\n//   input: 'https://twitter.com/tootallnate/status/481604870626349056' ]\n```\n\nUse code like this if you would like to transfer the \"named captures\" to the\n`match` object:\n\n``` js\n// example of copying the named captures as keys on the `match` object\nfor (var i = 0; i < keys.length; i++) {\n  if ('string' === typeof keys[i]) {\n    match[keys[i]] = match[i + 1];\n  }\n}\n\nconsole.log(match.username);\n// 'tootallnate'\n\nconsole.log(match.id);\n// '481604870626349056'\n```\n\nAPI\n---\n\n### PCRE(String pattern[, Array keys]) â†’ RegExp\n\nReturns a JavaScript RegExp instance from the given PCRE-compatible string.\nFlags may be passed in after the final delimiter in the `format` string.\n\nAn empty array may be passsed in as the second argument, which will be\npopulated with the \"named capture group\" names as Strings in the Array,\nonce the RegExp has been returned.\n",
  "readmeFilename": "README.md",
  "_id": "pcre-to-regexp@0.0.4",
  "dist": {
    "shasum": "a4b4dd073dd3e155a017f8f5611e20acf0716211"
  },
  "_from": "pcre-to-regexp@",
  "_resolved": "https://registry.npmjs.org/pcre-to-regexp/-/pcre-to-regexp-0.0.4.tgz"
}
